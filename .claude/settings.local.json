{
  "permissions": {
    "allow": [
      "Bash(npx create-next-app:*)",
      "Read(//Users/alvaro/Projects/**)",
      "Bash(npm install:*)",
      "Bash(npm init:*)",
      "Bash(npx create-playwright:*)",
      "Bash(printf:*)",
      "Bash(npx supabase:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run test:*)",
      "Bash(curl:*)",
      "Bash(open http://localhost:3000/booking)",
      "Bash(npm test)",
      "Bash(npx playwright test:*)",
      "Bash(node:*)",
      "Bash(git checkout:*)",
      "Bash(chmod:*)",
      "Bash(./create-users.sh:*)",
      "Bash(./create-demo-users.sh:*)",
      "Bash(psql:*)",
      "Bash(npm run build:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run type-check:*)",
      "Bash(pkill:*)",
      "Bash(npm run:*)",
      "Bash(npx tailwindcss:*)",
      "Bash(npm uninstall:*)",
      "WebFetch(domain:supabase.com)",
      "Bash(git add:*)",
      "Bash(open http://localhost:3000/admin/create-tenant)",
      "Bash(open http://localhost:3000/admin/manage-users)",
      "Bash(open http://localhost:3000/auth/login)",
      "Bash(open http://localhost:3000/dashboard/f47ac10b-58cc-4372-a567-0e02b2c3d479)",
      "Bash(open http://localhost:3000/admin/services)",
      "Bash(open http://localhost:3000/receptionist/agenda)",
      "Bash(open http://localhost:3000/appointments)",
      "Bash(open http://localhost:3000/patients)",
      "Bash(open http://localhost:3000/member/agenda)",
      "Bash(open http://localhost:3000/member/appointments)",
      "Bash(open http://localhost:3000/member/patients)",
      "Bash(open http://localhost:3000/client/appointments)",
      "Bash(open http://localhost:3000/client/payments)",
      "Bash(open http://localhost:3000/client/profile)",
      "Bash(find:*)",
      "Bash(open http://localhost:3001)",
      "Bash(open http://localhost:3001/booking)",
      "Bash(npm test:*)",
      "Bash(git init:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git remote set-url:*)",
      "Bash(npx tsc:*)",
      "Bash(open http://localhost:3005/booking)",
      "Bash(open http://localhost:3006)",
      "Bash(open http://localhost:3006/auth/login)",
      "Bash(open http://localhost:3007/auth/login)",
      "Bash(brew install:*)",
      "Bash(./create-auth-users.sh:*)",
      "Bash(./fix-migrations.sh:*)",
      "Bash(./populate-database.sh:*)",
      "Bash(./test-auth.sh:*)",
      "Bash(./update-user-profiles.sh:*)",
      "Bash(./check-doctor-profile.sh:*)",
      "Bash(./debug-profiles.sh:*)",
      "Bash(./check-rls-policies.sh:*)",
      "Bash(./test-auth-rls.sh:*)",
      "Bash(./check-doctor-tenants.sh:*)",
      "Bash(./setup-doctor-tenants.sh:*)",
      "Bash(open http://localhost:3008/auth/login)",
      "Bash(open http://localhost:3009/auth/login)",
      "Bash(open http://localhost:3009/dashboard/f47ac10b-58cc-4372-a567-0e02b2c3d479)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "Bash(lsof:*)",
      "Bash(xargs -r kill -9)",
      "Bash(open http://localhost:3000)",
      "Read(//dev/fd/**)",
      "Bash(nvm list:*)",
      "Bash(nvm install:*)",
      "Bash(npm --version)",
      "Bash(nvm use:*)",
      "Bash(source:*)",
      "Bash(open http://localhost:3002/auth/login)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3002 npx playwright test tests/agenda-management.spec.ts --timeout=60000 --headed)",
      "Bash(open http://localhost:3002/agenda)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3002 npx playwright test tests/authentication.spec.ts --timeout=60000 --grep \"should login doctor\")",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3002 npx playwright test tests/authentication.spec.ts --timeout=60000)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3003 npx playwright test tests/authentication.spec.ts --timeout=60000 --grep \"should login doctor\")",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3003 npx playwright test tests/agenda-management.spec.ts --timeout=60000)",
      "Bash(open http://localhost:3003/auth/login)",
      "Bash(open http://localhost:3003/agenda)",
      "Bash(killall:*)",
      "Bash(open http://localhost:3000/admin/schedules)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3000 npx playwright test tests/authentication.spec.ts --timeout=30000 --grep \"should login doctor\")",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3000 npx playwright test tests/authentication.spec.ts --timeout=30000)",
      "Bash(xargs:*)",
      "Bash(timeout 10 curl http://localhost:3000/api/tenants)",
      "Bash(git reset:*)",
      "Bash(git filter-branch:*)",
      "Bash(./fix-staff-password.sh:*)",
      "Bash(TOKEN=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMzZjZDI3YS00MzVmLTQ4Y2EtOGZjNC1kMmZmNzliYWNiNGIiLCJlbWFpbCI6InNlY3JlQGNsaW5pY2FzYW5yYWZhZWwuY29tIiwicm9sZSI6InN0YWZmIiwidGVuYW50SWQiOiIxMzIzYjg5ZC0yZDliLTRhODEtYTQxMi0wMDVjNzkxNTMzNzAiLCJpYXQiOjE3NTkyOTI0ODcsImV4cCI6MTc1OTg5NzI4N30.iJYBzdjJ_BNcL3v_rrwdREzMX20PbxcMO63fSN0dEUo\")",
      "Bash(__NEW_LINE__ curl -s -b /tmp/test-cookies.txt http://localhost:3000/api/auth/me)",
      "Bash(python3:*)",
      "Bash(cat:*)",
      "Bash(open http://localhost:3001/auth/login)",
      "Bash(open http://localhost:3001/auth/register-business)",
      "Bash(git merge:*)",
      "Bash(git pull:*)",
      "Bash(./apply-schedulable-migration.sh:*)",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\")",
      "Bash(export PGPASSWORD='VittaMed2024!')",
      "Bash(/tmp/apply-schedulable-update.sh:*)",
      "Bash(\"http://localhost:3000/api/tenants/1323b89d-2d9b-4a81-a412-005c79153370/users/bf75c99c-fca4-40e0-bc72-41741dbae75f\")",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"\\d custom_users\")",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"\\d user_profiles\")",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"\\d patients\")",
      "Bash(open:*)",
      "Read(//Users/alvaro/.npm/_logs/**)",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -f /tmp/fix-existing-doctor.sql)",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"SELECT email, role FROM custom_users WHERE email LIKE ''%@%'' LIMIT 10;\")",
      "Bash(column -t -s:*)",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"SELECT typname, enumlabel FROM pg_enum e JOIN pg_type t ON e.enumtypid = t.oid WHERE t.typname = ''tenant_type'' ORDER BY e.enumsortorder;\")",
      "Bash(export DATABASE_URL=\"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\")",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"\\d service_categories\")",
      "mcp__ide__getDiagnostics",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"SELECT email, password_hash FROM custom_users WHERE email = ''alvaro@abp.pe'';\")",
      "Bash(PGPASSWORD='VittaMed2024!' psql \"postgresql://postgres.mvvxeqhsatkqtsrulcil:VittaMed2024!@aws-0-us-east-1.pooler.supabase.com:6543/postgres\" -c \"SELECT id, patient_id, doctor_id, appointment_date, status FROM appointments WHERE tenant_id = ''33bfa2ef-c9c2-4eaa-8178-eed6d6df8d9e'' AND appointment_date >= ''2025-10-04'' LIMIT 5;\")",
      "Bash(PGPASSWORD='KMZvgHQAzeFdTg6O' psql:*)",
      "Bash(PGPASSWORD='KMZvgHQAzeFdTg6O' psql \"postgresql://postgres:KMZvgHQAzeFdTg6O@db.mvvxeqhsatkqtsrulcil.supabase.co:5432/postgres\" -c \"\nSELECT \n  a.id as appointment_id,\n  a.appointment_date,\n  a.patient_id,\n  cu.email as patient_email,\n  cu.first_name || '' '' || cu.last_name as patient_name\nFROM appointments a\nLEFT JOIN custom_users cu ON cu.id = a.patient_id\nWHERE a.tenant_id = ''33bfa2ef-c9c2-4eaa-8178-eed6d6df8d9e''\n  AND a.appointment_date >= ''2025-10-04''\nORDER BY a.appointment_date\nLIMIT 5;\n\")",
      "Bash(grep:*)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3000 npx playwright test tests/appointments-atender-button.spec.ts --timeout=60000)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3000 npx playwright test tests/vital-signs-validation.spec.ts --timeout=60000)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3000 npx playwright test tests/agenda-mobile.spec.ts tests/appointments-mobile.spec.ts --timeout=60000)",
      "Bash(PLAYWRIGHT_BASE_URL=http://localhost:3000 npx playwright test tests/appointments-atender-button.spec.ts tests/vital-signs-validation.spec.ts --timeout=60000)"
    ],
    "deny": [],
    "ask": []
  }
}